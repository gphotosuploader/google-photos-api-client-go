name: Test

on:
    push:
        branches:
            - 'main'
        paths-ignore:
            - '*.md'
    pull_request:
        paths-ignore:
            - '*.md'

permissions:
    contents: read
    
env:
    # run coverage only with the latest Go version
    LATEST_GO_VERSION: '1.23' 

jobs:
    test:
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest]
                # Each major Go release is supported until there are two newer major releases. https://golang.org/doc/devel/release.html#policy
                # The module is tested with last three major releases (unless there are pressing vulnerabilities)
                # As we depend on `golang.org/x/` libraries which only support last 2 Go releases we could have situations when
                # we derive from last three major releases promise.
                go: ['1.21', '1.22', '1.23']
        name: ${{ matrix.os }} @ Go ${{ matrix.go }}
        runs-on: ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-go@v5
              with:
                  go-version: ${{ matrix.go }}
                  
            - name: Build binary
              run: make build
              
            - name: Run tests
              run: make test
              
            - name: Send code coverage to Codecov
              if: success() && matrix.go == env.LATEST_GO_VERSION && matrix.os == 'ubuntu-latest'
              uses: codecov/codecov-action@v5
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
